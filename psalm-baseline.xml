<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="6.12.1@e71404b0465be25cf7f8a631b298c01c5ddd864f">
  <file src="src/Command/Base.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$config]]></code>
    </LessSpecificReturnStatement>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$input->getArguments()]]></code>
      <code><![CDATA[$input->getOptions()]]></code>
    </MixedArgumentTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[non-empty-string|null]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Command/Get.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[(string) $software]]></code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement>
      <code><![CDATA[\array_map(
            static fn(mixed $software): DownloadConfig => $toDownload[$software]
                ?? DownloadConfig::fromSoftwareId((string) $software),
            $input->getArgument(self::ARG_SOFTWARE),
        )]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$forceDownload]]></code>
      <code><![CDATA[$input->getArgument(self::ARG_SOFTWARE)]]></code>
    </MixedArgument>
    <MixedArrayOffset>
      <code><![CDATA[$toDownload[$software]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$argument]]></code>
      <code><![CDATA[$forceDownload]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[list<DownloadConfig>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Command/Init.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$softwareName]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$style]]></code>
    </InvalidArgument>
    <LessSpecificReturnType>
      <code><![CDATA[DownloadConfig|null]]></code>
    </LessSpecificReturnType>
    <MixedArgument>
      <code><![CDATA[$option]]></code>
      <code><![CDATA[$softwareName]]></code>
      <code><![CDATA[$softwareName]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$option]]></code>
      <code><![CDATA[$selectedOptions]]></code>
      <code><![CDATA[$softwareName]]></code>
    </MixedAssignment>
    <UndefinedInterfaceMethod>
      <code><![CDATA[ask]]></code>
      <code><![CDATA[ask]]></code>
      <code><![CDATA[ask]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Command/ListSoftware.php">
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$software->homepage]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Command/Show.php">
    <InvalidArrayOffset>
      <code><![CDATA[$units[$i]]]></code>
    </InvalidArrayOffset>
    <InvalidOperand>
      <code><![CDATA[$bytes /= 1024]]></code>
    </InvalidOperand>
    <MixedArgument>
      <code><![CDATA[$units[$i]]]></code>
    </MixedArgument>
  </file>
  <file src="src/DLoad.php">
    <MixedArgument>
      <code><![CDATA[$rule->chmod]]></code>
    </MixedArgument>
    <MixedPropertyFetch>
      <code><![CDATA[$rule->chmod]]></code>
    </MixedPropertyFetch>
    <PossiblyNullArgument>
      <code><![CDATA[$software->binary]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Module/Archive/ArchiveFactory.php">
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$this->matchers]]></code>
    </MixedPropertyTypeCoercion>
    <PropertyTypeCoercion>
      <code><![CDATA[\array_unique(\array_merge($this->extensions, $extensions))]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Module/Archive/Internal/NullArchive.php">
    <MoreSpecificReturnType>
      <code><![CDATA[\Generator<non-empty-string, \SplFileInfo, \SplFileInfo|null, void>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Module/Archive/Internal/PharArchive.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[PharArchive]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Module/Archive/Internal/PharAwareArchive.php">
    <MoreSpecificReturnType>
      <code><![CDATA[\Generator]]></code>
    </MoreSpecificReturnType>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$archive]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Module/Archive/Internal/TarPharArchive.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[TarPharArchive]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Module/Archive/Internal/ZipPharArchive.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[ZipPharArchive]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Module/Binary/BinaryVersion.php">
    <MismatchingDocblockReturnType>
      <code><![CDATA[BinaryVersion]]></code>
    </MismatchingDocblockReturnType>
  </file>
  <file src="src/Module/Binary/Internal/BinaryExecutor.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$output]]></code>
    </LessSpecificReturnStatement>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$output]]></code>
    </MixedArgumentTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[list<string>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Module/Binary/Internal/GlobalBinary.php">
    <MixedArgument>
      <code><![CDATA[$output[0]]]></code>
    </MixedArgument>
  </file>
  <file src="src/Module/Common/FileSystem/Path.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$pos === false || $pos === 0 ? $name : \substr($name, 0, $pos)]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[non-empty-string]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Module/Common/Internal/Injection/ConfigLoader.php">
    <MixedMethodCall>
      <code><![CDATA[new $attribute->class()]]></code>
      <code><![CDATA[new $attribute->class()]]></code>
    </MixedMethodCall>
    <RedundantCondition>
      <code><![CDATA[\assert($xml instanceof \SimpleXMLElement)]]></code>
      <code><![CDATA[\assert($xml instanceof \SimpleXMLElement)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Module/Common/Internal/ObjectContainer.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$id]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[\is_a($binding, Factoriable::class, true)]]></code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[object]]></code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument>
      <code><![CDATA[[$binding, 'create']]]></code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->factory]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$arguments]]></code>
      <code><![CDATA[$service]]></code>
    </MixedArgumentTypeCoercion>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$this->cache]]></code>
    </MixedPropertyTypeCoercion>
    <MixedReturnStatement>
      <code><![CDATA[$this->injector->invoke([$binding, 'create'])]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code><![CDATA[$service]]></code>
    </MoreSpecificImplementedParamType>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->cache]]></code>
    </PropertyTypeCoercion>
    <UndefinedMethod>
      <code><![CDATA[$id::create(...)]]></code>
    </UndefinedMethod>
  </file>
  <file src="src/Module/Downloader/Downloader.php">
    <InternalMethod>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
    </InternalMethod>
    <InvalidNullableReturnType>
      <code><![CDATA[ReleaseInterface]]></code>
    </InvalidNullableReturnType>
    <InvalidReturnType>
      <code><![CDATA[AssetInterface]]></code>
    </InvalidReturnType>
  </file>
  <file src="src/Module/Downloader/Internal/DownloadContext.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$asset]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$release]]></code>
      <code><![CDATA[$repoConfig]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Module/Downloader/SoftwareCollection.php">
    <MixedArgument>
      <code><![CDATA[$softwareArray]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$softwareArray]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Module/HttpClient/Internal/NyholmFactoryImpl.php">
    <ClassMustBeFinal>
      <code><![CDATA[NyholmFactoryImpl]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="src/Module/Repository/Collection/CompositeRepository.php">
    <InvalidArgument>
      <code><![CDATA[function () {
            foreach ($this->repositories as $repository) {
                yield from $repository->getReleases();
            }
        }]]></code>
    </InvalidArgument>
  </file>
  <file src="src/Module/Repository/Collection/ReleasesCollection.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[\ltrim(\str_replace(
            '-' . $stability->value,
            '.' . $stability->getWeight() . '.',
            $release->getVersion()->string,
        ), 'v')]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[non-empty-string]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullOperand>
      <code><![CDATA[$stability->value]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$stability->value]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code><![CDATA[getWeight]]></code>
      <code><![CDATA[getWeight]]></code>
    </PossiblyNullReference>
  </file>
  <file src="src/Module/Repository/Internal/CachedGenerator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Traversable<array-key, T>]]></code>
    </LessSpecificImplementedReturnType>
    <MixedAssignment>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Module/Repository/Internal/Collection.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$items instanceof \Closure => static::create($items())]]></code>
    </DocblockTypeContradiction>
    <InvalidFunctionCall>
      <code><![CDATA[$items()]]></code>
    </InvalidFunctionCall>
    <MissingClosureParamType>
      <code><![CDATA[$item]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$item]]></code>
      <code><![CDATA[$item]]></code>
      <code><![CDATA[$items()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$items]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$items[]]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$this->items instanceof CachedGenerator
                ? $this->items->first()
                : ($this->items === [] ? null : $this->items[\array_key_first($this->items)])]]></code>
    </MixedReturnStatement>
    <UnsafeGenericInstantiation>
      <code><![CDATA[new static($items)]]></code>
      <code><![CDATA[new static($items)]]></code>
      <code><![CDATA[new static(new CachedGenerator($items))]]></code>
    </UnsafeGenericInstantiation>
  </file>
  <file src="src/Module/Repository/Internal/GitHub/Api/Client.php">
    <InvalidArgument>
      <code><![CDATA[$decoded]]></code>
    </InvalidArgument>
    <RedundantCondition>
      <code><![CDATA[\is_array($decoded)
                && \count($decoded) === 2
                && \is_string($decoded[0])
                && \is_string($decoded[1])]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Module/Repository/Internal/GitHub/Api/Response/AssetInfo.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$data['browser_download_url']]]></code>
      <code><![CDATA[$data['content_type']]]></code>
      <code><![CDATA[$data['name']]]></code>
      <code><![CDATA[$data['size']]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Module/Repository/Internal/GitHub/Api/Response/ReleaseInfo.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$data['name'] ?? $data['tag_name']]]></code>
      <code><![CDATA[$data['tag_name']]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Module/Repository/Internal/GitHub/Api/Response/RepositoryInfo.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$data['full_name']]]></code>
      <code><![CDATA[$data['html_url']]]></code>
      <code><![CDATA[$data['name']]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Module/Repository/Internal/GitHub/Factory.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$org]]></code>
      <code><![CDATA[$org]]></code>
      <code><![CDATA[$repo]]></code>
      <code><![CDATA[$repo]]></code>
    </ArgumentTypeCoercion>
    <PossiblyFalseArgument>
      <code><![CDATA[$uri]]></code>
    </PossiblyFalseArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$org]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="src/Module/Repository/Internal/GitHub/GitHubAsset.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Generator<int, string, mixed, void>]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="src/Module/Repository/Internal/GitHub/GitHubRelease.php">
    <InvalidArgument>
      <code><![CDATA[static function () use ($api, $result, $dto): \Generator {
            foreach ($dto->assets as $assetDTO) {
                yield GitHubAsset::fromDTO($api, $result, $assetDTO);
            }
        }]]></code>
    </InvalidArgument>
    <RedundantCondition>
      <code><![CDATA[$this->assets === null]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[$this->assets === null]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Module/Repository/Internal/Paginator.php">
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$loader->valid() ? $loader->current() : []]]></code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Module/Repository/Internal/Release.php">
    <InvalidNullableReturnType>
      <code><![CDATA[bool]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$constraint->isSatisfiedBy($this->version)]]></code>
    </NullableReturnStatement>
  </file>
  <file src="src/Module/Version/Constraint.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[\trim($constraint)]]></code>
    </ArgumentTypeCoercion>
    <TypeDoesNotContainType>
      <code><![CDATA[$origin === '']]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Module/Version/Version.php">
    <InvalidLiteralArgument>
      <code><![CDATA['x-dev']]></code>
    </InvalidLiteralArgument>
    <ReferenceConstraintViolation>
      <code><![CDATA[$suffix]]></code>
      <code><![CDATA[$suffix]]></code>
      <code><![CDATA[return $stability;]]></code>
      <code><![CDATA[return Stability::Dev;]]></code>
    </ReferenceConstraintViolation>
  </file>
  <file src="src/Service/Factoriable.php">
    <InvalidDocblock>
      <code><![CDATA[Factoriable]]></code>
    </InvalidDocblock>
  </file>
</files>
